/* 2) შექმენით რეგისტრაციის ფორმა სადაც მომხმარებელი, შემოიტანს თავის Name,Email,Password - ს თქვენი დავალებაა, რომ ამ ფორმას დაამატოთ ვალიდაცია, ღილაკზე 
დაჭერისას წამოიღოთ თითოეული <input></input> თეგიდან ინფორმაცია, უნდა გქონდეთ ერთი Class - ი სახელად User{} - ი სადაც თქვენ ჩაამატებთ ამ მომხმარებლის 
Name Email Password - ს (გამოიყენეთ constructor - ი  რომელსაც არგუმენტად მიანიჭებთ (name,email,password) - ს) Class User{} - ში თქვენ უნდა გქონდეთ getter 
and setter - მეთოდები, უნდა გქონდეთ get name() - ი რომელიც დააბრუნებს მომხმარებლის სახელს, უნდა შექმნათ set password(newPass) რომელიც შეამოწმებს პაროლს, 
შეამოწმეთ თუ პაროლი შეადგენს 4 - ზე მეტ სიმბოლოს, რაიმე რიცხვს ან აქვს პუნქტუაციის რომელიღაცა სიმბოლო მაშინ პაროლი განაახლეთ სხვა შემთხვევაში კი უნდა გათიშოთ 
setter - ი. უნდა გქონდეთ users - მასივი სადაც თქვენ ჩაამატებთ მომხმარებლის ინფორმაციას, Class User{} - ით შექმნილი ობიექტის მიხედვით შექმენით ერთი ცვლადი 
რომელშიც შეინახავთ მომხარებლის ინფორმაციას new User() - ის გამოყენებით, შექმნილი ცვლადი უნდა ჩაამატოთ users - მასივში და საბოლოო შედეგი გამოიტანოთ console - ში */

// 3) მეორე დავალების დაწერის შემდეგ დააკომენტარეთ (ახსენით) კოდი
const form = document.querySelector('form'); // იქმნება ცვლადი const - ით, document.querySelector - გამოყენებით ჩვენ ვიღებთ წვდომას form - ზე
const users = []; // იქმნება ცვლადი const - ით რომელიც ინახავს [] - სიას სადაც ჩვენ ჩავამატებთ მომხმარებლების ინფორმაციას
const alphabet = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"; // შექმნილი არის ცვლადი const keyword - ის გამოყენებით რომელიც ინახავს alphabet - ს
// იგივე ასოებს, ამას ჩვენ ვქმნით იმისთვის რომ შევამოწმოთ შეიცავს თუ არა ჩვენი პაროლი ამ ცვლადის მნიშვნელობიდან რომელიმე სიმბოლოს
const digits = "0123456789"; // შექმნილი არის ცვლადი const keyword - ის გამოყენებით რომელიც ინახავს რიცხვებს ამის დახმარებით ჩვენ შევამოწმებთ შეიცავს თუ არა 
// ჩვენი პაროლი რაიმე რიცხვს
const punctuationChars = `!"#$%&'()*+,-./:;<=>?@[\\]^_\`{|}~`; // შექმნილი არის ცვლადი const keyword - ის გამოყენებით რომელიც ინახავს პუნქტუაციის სიმბოლოებს
// ამის დახმარებით ჩვენ შევამოწმებთ შეიცავს თუ არა ჩვენი პაროლი რომელიმე პუნქტუაციის სიმბოლოს

function isValidPassword(pass) { // ვქმნით ფუნქციას სახელად isValidPassword რომელსაც არგუმენტად გადაეცემა pass - ი იგივე პაროლი 
    let hasAlphabet = false; // შექმნილი არის ცვლადი let keyword - ის გამოყენებით სახელად hasAlphabet რომლის მნიშვნელობაც უდრის false - ს 
    let hasDigits = false; // შექმნილი არის ცვლადი let keyword - ის გამოყენებით სახელად hasDigits რომლიც მნიშვნელობაც უდრის false - ს 
    let hasPunctuation = false; // შექმნილი არის ცვლადი let keyword - ის გამოყენებით სახელად hasPunctuation რომლიც მნიშვნელობაც უდრის false - ს 

    for(let i = 0; i < pass.length; i++){ // for loop - ის გამოყენებით ჩვენ გადავუარეთ pass,პაროლის თითოეულ სიმბოლოს 
        if(alphabet.includes(pass[i])){ // ვამოწმებთ თუ alphabet ცვლადის მნიშვნელობა შეიცავს პაროლის რომელიღაცა სიმბოლოს
            hasAlphabet = true; // მაშინ ჩვენ მიერ შექმნილი hasAlphabet ცლადის მნიშვნელობა გახდება true
        }

        if(digits.includes(pass[i])){ // ვამოწმებ თუ digits ცვლადის მნიშვნელობა შეიცავს პაროლის რომელიღაც სიმბოლოს
            hasDigits = true; // მაშინ hasDigits ცვლადის მნიშვნელობა გაზდება true
        }

        if(punctuationChars.includes(pass[i])){ // ვამოწმებთ თუ punctuationChars - ცვლადი შეიცავს ჩვენი პაროლის რომელიღაც სიმბოლოს
            hasPunctuation = true; // მაშინ hasPunctuation ცვლადის მნიშვნელობა გახდება true 
        }
    }

    return hasAlphabet && hasDigits && hasPunctuation // დავაბრუნებთ hasAlphabet hasDigits და hasPunctuation ცლადებს და მათ მნიშვნელობებს
}

form.addEventListener('submit',(e) => { // form - ს ვუმატებთ მოვლენის მსმენელს, ფრჩხილებში გადავცმთ e - event handler - ს
    e.preventDefault(); // preventDefault - ამას ვიყენებთ ჩვენ მაშინ როდესაც არ გვინდა რომ submit ღილაკზე დაჭერისას ჩვენი შეყვანილი ინფორმაცია form - ში
    // დაიკარგოს არამედ ჩვენ გვინდა რომ მომხმარებლის მიერ შეყვანილი ინფორმაცია გამოვიყენოთ
    let email = form.email.value; // ვქმნით ცვლადს სახელად email რომელიც უტოლდება მომხმარებლის მიერ შემოყვანილ Email - ის მნიშვნელობას
    let name = form.name.value; // ვქმნით ცვლადს სახელად name რომელიც უტოლდება მომხმარებლის მიერ შემოყვანილ name - ის მნიშვნელობას
    let password = form.password.value; // ვქმნით ცვლადს სახელად password რომელიც უტოლდება მომხმარებლის კიერ შემოყვანილ password - ის მნიშვნელობას

    console.log(name); // ვბეჭდავთ თითოეულ ცვლადს და მათ მნიშვნელობას, ვბეჭდავთ name - ს
    console.log(email); // ვბეჭდავთ email - ს
    console.log(password); // და ვბეჭდავთ password - ს

    class User{ // ვქმნით Class - ს სახელად User(მომხმარებელი)
        constructor(name,email,password){ // დავამატეთ constructor - ი რომელიც შექმნის ობიექტს თავისი კუთვნილებებით(გასაღებებით) და მნიშვნელობებით 
            // ამ შემთხვევაში constructor - ს გადაეცემა name - სახელი,email, password - პაროლი
            this._name = name; // ვიღებთ ობიექტიდან მომხმარებლის name - ს,სახელს
            this._email = email; // ვიღებთ ობიექტიდან მომხმარებლის email - ს
            this._password = password; // ვიღებთ ობიექტიდან მომხმარებლის პაროლს password
        }

        get name(){ // ვქმნით getter მეთოდს რომლის სახელია name - ი რაც მიუთითებს იმას რომ ჩვენ უნდა დავაბრუნოთ მოხმარებლის სახელი ობიექტიდან
            return this._name // ვაბრუნებთ მომხმარებლის სახელს ობიექტიდან
        }

        set password(newPass){ // ვქმნით setter მეთოდს რომლის სახელია password - ი რომელიც არგუმენტად იღებს ახალ პაროლის newPass
            if(newPass.length > 4 && isValidPassword(newPass)){ // ვამოწმებთ ამ პაროლის ვალიდაციას, ვამოწმებთ შეიცავს თუ არა ჩვენი პაროლი 4 - სიმბოლოზე მეტს
                // შეიცავს თუ არა რაიმე რიცხვს და შეიცავს თუ არა პუნქტუაციის რომელიმე სიმბოლოს(isValidPassword ფუნქციას გადავეცით არგუმენტად newPass
                // რომელიც შეამოწმებს არის თუ არა ჩვენი პაროლი ვალიდური)
                this._password = newPass; // თუ ჩვენი პარლი ვალიდურია მაშინ ობიექტიდან ამოღებული პაროლის მნიშვნელობა გახდება ახალი პაროლის ტოლი
            }else{ // სხვა შემთხვევაში კი 
                return; // setter - მეთოდი გაჩერდება იმ შემთხვევაში თუ მომხმარებლის პაროლი არ არის ვალიდური
            }
        }
    }

    const user = new User(name,email,password) // ვქმნით user - ცვლადს და new User - ის გამოყენებით Class - ს გადავცემთ მომხმარებლის სახელს email - ს
    // და password - ს
    users.push(user); // ჩვენ შექმნილ მასივში ვამატებთ user ობიექტს
    console.log(users); // ვაბრუნებთ users - მასივს 
    user.password = '123567#f'; // საბოლოოდ კი setter მეთოდს გადავცემთ '123567#f' ახალ პაროლს რომელიც გაივლის ფუნქციის პირობებს და შეამოწმებთ 
    // არის თუ არა ეს პაროლი ვალიდური თუ არის მაშინ მომხმარებლის პაროლი განახლდება სხვა შემთხვევაში კი მომხმარებლის პაროლი იგივე დარჩება

    form.reset();
});